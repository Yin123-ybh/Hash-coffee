<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.SeckillActivityMapper">

    <select id="pageQuery" resultType="com.sky.entity.SeckillActivity">
        select sa.*, d.name as dishName from seckill_activity sa
        left join dish d on sa.dish_id = d.id
        <where>
            <if test="name != null and name != ''">
                and sa.name like concat('%',#{name},'%')
            </if>
            <if test="status != null">
                and sa.status = #{status}
            </if>
            <if test="startTime != null">
                and sa.start_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and sa.end_time &lt;= #{endTime}
            </if>
        </where>
        order by sa.create_time desc
    </select>

    <select id="getById" resultType="com.sky.entity.SeckillActivity">
        select sa.*, d.name as dishName from seckill_activity sa
        left join dish d on sa.dish_id = d.id
        where sa.id = #{id}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into seckill_activity
        (name, description, dish_id, seckill_price, original_price, stock, sold_count, per_user_limit, 
         start_time, end_time, status, create_time, update_time, create_user, update_user)
        values
        (#{name}, #{description}, #{dishId}, #{seckillPrice}, #{originalPrice}, #{stock}, #{soldCount}, 
         #{perUserLimit}, #{startTime}, #{endTime}, #{status}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <update id="update">
        update seckill_activity
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="dishId != null">dish_id = #{dishId},</if>
            <if test="seckillPrice != null">seckill_price = #{seckillPrice},</if>
            <if test="originalPrice != null">original_price = #{originalPrice},</if>
            <if test="stock != null">stock = #{stock},</if>
            <if test="soldCount != null">sold_count = #{soldCount},</if>
            <if test="perUserLimit != null">per_user_limit = #{perUserLimit},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from seckill_activity where id = #{id}
    </delete>

    <update id="updateStatus">
        update seckill_activity set status = #{status}, update_time = now(), update_user = #{updateUser} where id = #{id}
    </update>

    <select id="getStatistics" resultType="com.sky.vo.SeckillStatisticsVO">
        select 
            sa.id as activityId,
            sa.name as activityName,
            d.name as dishName,
            sa.original_price as originalPrice,
            sa.seckill_price as seckillPrice,
            sa.stock,
            sa.sold_count as soldCount,
            round((sa.sold_count * 100.0 / sa.stock), 2) as sellRate,
            sa.start_time as startTime,
            sa.end_time as endTime,
            sa.status
        from seckill_activity sa
        left join dish d on sa.dish_id = d.id
        where sa.create_time between #{startTime} and #{endTime}
        order by sa.create_time desc
    </select>

    <select id="getCurrentActivities" resultType="com.sky.entity.SeckillActivity">
        select sa.*, d.name as dishName from seckill_activity sa
        left join dish d on sa.dish_id = d.id
        where sa.status = 1 and sa.start_time &lt;= #{currentTime} and sa.end_time &gt;= #{currentTime}
    </select>

    <update id="reduceStock">
        update seckill_activity 
        set stock = stock - #{quantity}, update_time = now()
        where id = #{id} and stock &gt;= #{quantity}
    </update>

    <update id="increaseSoldCount">
        update seckill_activity 
        set sold_count = sold_count + #{quantity}, update_time = now()
        where id = #{id}
    </update>

</mapper>
